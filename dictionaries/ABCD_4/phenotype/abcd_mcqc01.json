{
    "participant_id": {
        "LongName": "Participant Identifier",
        "Description": "Unique BIDS identifier for the participant in this study."
    },
    "subjectkey": {
        "Description": "The NDAR Global Unique Identifier (GUID) for research subject",
        "DataType": "GUID",
        "ValueRange": "NDAR*"
    },
    "src_subject_id": {
        "Description": "Subject ID how it's defined in lab/project",
        "DataType": "String"
    },
    "interview_date": {
        "Description": "Date on which the interview/genetic test/sampling/imaging/biospecimen was completed. MM/DD/YYYY",
        "DataType": "Date"
    },
    "interview_age": {
        "Description": "Age in months at the time of the interview/test/sampling/imaging. | Age is rounded to chronological month. If the research participant is 15-days-old at time of interview, the appropriate value would be 0 months. If the participant is 16-days-old, the value would be 1 month.",
        "DataType": "Integer",
        "ValueRange": "0 :: 1260"
    },
    "sex": {
        "Description": "Sex of subject at birth | M = Male; F = Female; O=Other; NR = Not reported",
        "DataType": "String",
        "ValueRange": "M;F; O; NR",
        "Levels": {
            "M": "Male",
            "F": "Female",
            "O": "Other",
            "NR": "Not reported"
        }
    },
    "eventname": {
        "Description": "The event name for which the data was collected",
        "DataType": "String"
    },
    "mctq_go_to_school": {
        "Description": "Do you go to school on a regular basis? | 1=Yes; 0=No; 777=Refuse to Answer",
        "DataType": "Integer",
        "ValueRange": "0;1;777",
        "Levels": {
            "1": "Yes",
            "0": "No",
            "777": "Refuse to Answer"
        }
    },
    "mctq_days_per_week": {
        "Description": "I go to school on _____ day(s) per week. | 1=1; 2=2; 3=3; 4=4; 5=5; 6=6; 7=7",
        "DataType": "Integer",
        "ValueRange": "1::7",
        "Levels": {
            "1": "1",
            "2": "2",
            "3": "3",
            "4": "4",
            "5": "5",
            "6": "6",
            "7": "7"
        }
    },
    "mctq_days_per_week_calc": {
        "Description": "Number of work days per week | if ( [mctq_go_to_school] = 0 and [mctq_days_per_week] =\"=0=[mctq_days_per_week])",
        "DataType": "Float"
    },
    "mctq_sd_btime": {
        "Description": "I go to bed at: | 1=Morning (4:00 AM to 11:59 AM); 2=Afternoon (12:00 PM Noon to 4:59 PM); 3=Evening (5:00 PM to 8:59 PM); 4=Nighttime (9:00 PM to 3:59 AM)",
        "DataType": "Integer",
        "ValueRange": "1::4",
        "Levels": {
            "1": "Morning (4:00 AM to 11:59 AM)",
            "2": "Afternoon (12:00 PM Noon to 4:59 PM)",
            "3": "Evening (5:00 PM to 8:59 PM)",
            "4": "Nighttime (9:00 PM to 3:59 AM)"
        }
    },
    "mctq_sd_btime_hrs1": {
        "Description": "I go to bed at: | 1=4 AM; 2=5 AM; 3=6 AM; 4=7 AM; 5=8 AM; 6=9 AM; 7=10 AM; 8=11 AM; 9=12 PM; 10=1 PM; 11=2 PM; 12=3 PM; 13=4 PM",
        "DataType": "Integer",
        "ValueRange": "1::13",
        "Levels": {
            "1": "4 AM",
            "2": "5 AM",
            "3": "6 AM",
            "4": "7 AM",
            "5": "8 AM",
            "6": "9 AM",
            "7": "10 AM",
            "8": "11 AM",
            "9": "12 PM",
            "10": "1 PM",
            "11": "2 PM",
            "12": "3 PM",
            "13": "4 PM"
        }
    },
    "mctq_sd_btime_hrs2": {
        "Description": "I go to bed at: | 1=5 PM; 2=6 PM; 3=7 PM; 4=8 PM; 5=9 PM; 6=10 PM; 7=11 PM; 8=12 AM; 9=1 AM; 10=2 AM; 11=3 AM",
        "DataType": "Integer",
        "ValueRange": "1::11",
        "Levels": {
            "1": "5 PM",
            "2": "6 PM",
            "3": "7 PM",
            "4": "8 PM",
            "5": "9 PM",
            "6": "10 PM",
            "7": "11 PM",
            "8": "12 AM",
            "9": "1 AM",
            "10": "2 AM",
            "11": "3 AM"
        }
    },
    "mctq_sd_btime_min": {
        "Description": "I go to bed at: | 1=0 minutes; 2=5 minutes; 3=10 minutes; 4=15 minutes; 5=20 minutes; 6=25 minutes; 7=30 minutes; 8=35 minutes; 9=40 minutes; 10=45 minutes; 11=50 minutes; 12=55 minutes",
        "DataType": "Integer",
        "ValueRange": "1::12",
        "Levels": {
            "1": "0 minutes",
            "2": "5 minutes",
            "3": "10 minutes",
            "4": "15 minutes",
            "5": "20 minutes",
            "6": "25 minutes",
            "7": "30 minutes",
            "8": "35 minutes",
            "9": "40 minutes",
            "10": "45 minutes",
            "11": "50 minutes",
            "12": "55 minutes"
        }
    },
    "mctq_sd_btime_calc": {
        "Description": "Local time of going to bed, workday | ([mctq_sd_btime_min] - 1)/12 + if ([mctq_sd_btime_hrs1] > 0, (3 + [mctq_sd_btime_hrs1]), (16 + [mctq_sd_btime_hrs2]))",
        "DataType": "Float"
    },
    "mctq_sd_fall_asleep": {
        "Description": "I actually start trying to fall asleep at: | 1=Morning (4:00 AM to 11:59 AM); 2=Afternoon (12:00 PM Noon to 4:59 PM); 3=Evening (5:00 PM to 8:59 PM); 4=Nighttime (9:00 PM to 3:59 AM)",
        "DataType": "Integer",
        "ValueRange": "1::4",
        "Levels": {
            "1": "Morning (4:00 AM to 11:59 AM)",
            "2": "Afternoon (12:00 PM Noon to 4:59 PM)",
            "3": "Evening (5:00 PM to 8:59 PM)",
            "4": "Nighttime (9:00 PM to 3:59 AM)"
        }
    },
    "mctq_sd_asleep_hrs1": {
        "Description": "I actually start trying to fall asleep at: | 1=4 AM; 2=5 AM; 3=6 AM; 4=7 AM; 5=8 AM; 6=9 AM; 7=10 AM; 8=11 AM; 9=12 PM; 10=1 PM; 11=2 PM; 12=3 PM; 13=4 PM",
        "DataType": "Integer",
        "ValueRange": "1::13",
        "Levels": {
            "1": "4 AM",
            "2": "5 AM",
            "3": "6 AM",
            "4": "7 AM",
            "5": "8 AM",
            "6": "9 AM",
            "7": "10 AM",
            "8": "11 AM",
            "9": "12 PM",
            "10": "1 PM",
            "11": "2 PM",
            "12": "3 PM",
            "13": "4 PM"
        }
    },
    "mctq_sd_asleep_hrs2": {
        "Description": "I actually start trying to fall asleep at: | 1=5 PM; 2=6 PM; 3=7 PM; 4=8 PM; 5=9 PM; 6=10 PM; 7=11 PM; 8=12 AM; 9=1 AM; 10=2 AM; 11=3 AM",
        "DataType": "Integer",
        "ValueRange": "1::11",
        "Levels": {
            "1": "5 PM",
            "2": "6 PM",
            "3": "7 PM",
            "4": "8 PM",
            "5": "9 PM",
            "6": "10 PM",
            "7": "11 PM",
            "8": "12 AM",
            "9": "1 AM",
            "10": "2 AM",
            "11": "3 AM"
        }
    },
    "mctq_sd_asleep_min": {
        "Description": "I actually start trying to fall asleep at: | 1=0 minutes; 2=5 minutes; 3=10 minutes; 4=15 minutes; 5=20 minutes; 6=25 minutes; 7=30 minutes; 8=35 minutes; 9=40 minutes; 10=45 minutes; 11=50 minutes; 12=55 minutes",
        "DataType": "Integer",
        "ValueRange": "1::12",
        "Levels": {
            "1": "0 minutes",
            "2": "5 minutes",
            "3": "10 minutes",
            "4": "15 minutes",
            "5": "20 minutes",
            "6": "25 minutes",
            "7": "30 minutes",
            "8": "35 minutes",
            "9": "40 minutes",
            "10": "45 minutes",
            "11": "50 minutes",
            "12": "55 minutes"
        }
    },
    "mctq_fd_time_aget_up_calc": {
        "Description": "Local time of preparing to go to sleep, free day | ([mctq_fd_asleep_min] - 1)/12 + if([mctq_fd_asleep_hrs1] > 0, (3 + [mctq_fd_asleep_hrs1]), (16 + [mctq_fd_asleep_hrs2]))",
        "DataType": "Float"
    },
    "mctq_sd_min_to_sleep": {
        "Description": "I need ________ minutes to fall asleep. | 0=0; 1=1; 2=2; 3=3; 4=4; 5=5; 6=6; 7=7; 8=8; 9=9; 10=10; 11=15; 12=20; 13=25; 14=30; 15=40; 16=50; 17=1 hour; 18=1 hour 15 minute; 19=1 hour 30 minute; 20=1 hour 45 minute; 21=2 hours; 22=3 hours; 23=4 hours",
        "DataType": "Integer",
        "ValueRange": "0::23",
        "Levels": {
            "0": "0",
            "1": "1",
            "2": "2",
            "3": "3",
            "4": "4",
            "5": "5",
            "6": "6",
            "7": "7",
            "8": "8",
            "9": "9",
            "10": "10",
            "11": "15",
            "12": "20",
            "13": "25",
            "14": "30",
            "15": "40",
            "16": "50",
            "17": "1 hour",
            "18": "1 hour 15 minute",
            "19": "1 hour 30 minute",
            "20": "1 hour 45 minute",
            "21": "2 hours",
            "22": "3 hours",
            "23": "4 hours"
        }
    },
    "mctq_sd_fall_asleep_calc": {
        "Description": "Local time of preparing to go to sleep, workday | ([mctq_sd_asleep_min] - 1)/12 + if ([mctq_sd_asleep_hrs1] > 0, (3 +[mctq_sd_asleep_hrs1]), (16 + [mctq_sd_asleep_hrs2]))",
        "DataType": "Float"
    },
    "mctq_sd_min_to_sleep_calc": {
        "Description": "Sleep latency, workday | if ([mctq_sd_min_to_sleep] < 11=[mctq_sd_min_to_sleep]=if ([mctq_sd_min_to_sleep] < 15=15 + 5*([mctq_sd_min_to_sleep] - 11), if( [mctq_sd_min_to_sleep] < 18=40 + 10*([mctq_sd_min_to_sleep] - 15), if( [mctq_sd_min_to_sleep] < 22 =75 + 15*([mctq_sd_min_to_sleep] - 18) =180 + 60*([mctq_sd_min_to_sleep] - 22)))))",
        "DataType": "Float"
    },
    "mctq_sd_num_wake_up": {
        "Description": "After falling asleep, I wake up ____ times during the night. ",
        "DataType": "Integer"
    },
    "mctq_sd_awakening_min": {
        "Description": "Altogether, these awakenings last ______minutes. | 0=0; 1=1; 2=2; 3=3; 4=4; 5=5; 6=6; 7=7; 8=8; 9=9; 10=10; 11=15; 12=20; 13=25; 14=30; 15=40; 16=50; 17=1 hour; 18=1 hour 15 minute; 19=1 hour 30 minute; 20=1 hour 45 minute; 21=2 hours; 22=3 hours; 23=4 hours",
        "DataType": "Integer",
        "ValueRange": "0::23",
        "Levels": {
            "0": "0",
            "1": "1",
            "2": "2",
            "3": "3",
            "4": "4",
            "5": "5",
            "6": "6",
            "7": "7",
            "8": "8",
            "9": "9",
            "10": "10",
            "11": "15",
            "12": "20",
            "13": "25",
            "14": "30",
            "15": "40",
            "16": "50",
            "17": "1 hour",
            "18": "1 hour 15 minute",
            "19": "1 hour 30 minute",
            "20": "1 hour 45 minute",
            "21": "2 hours",
            "22": "3 hours",
            "23": "4 hours"
        }
    },
    "mctq_sd_wake_up_time": {
        "Description": "I wake up at: | 1=Morning (4:00 AM to 11:59 AM); 2=Afternoon (12:00 PM Noon to 4:59 PM); 3=Evening (5:00 PM to 8:59 PM); 4=Nighttime (9:00 PM to 3:59 AM)",
        "DataType": "Integer",
        "ValueRange": "1::4",
        "Levels": {
            "1": "Morning (4:00 AM to 11:59 AM)",
            "2": "Afternoon (12:00 PM Noon to 4:59 PM)",
            "3": "Evening (5:00 PM to 8:59 PM)",
            "4": "Nighttime (9:00 PM to 3:59 AM)"
        }
    },
    "mctq_sd_wake_up_time_hrs1": {
        "Description": "I wake up at: | 1=4 AM; 2=5 AM; 3=6 AM; 4=7 AM; 5=8 AM; 6=9 AM; 7=10 AM; 8=11 AM; 9=12 PM; 10=1 PM; 11=2 PM; 12=3 PM; 13=4 PM",
        "DataType": "Integer",
        "ValueRange": "1::13",
        "Levels": {
            "1": "4 AM",
            "2": "5 AM",
            "3": "6 AM",
            "4": "7 AM",
            "5": "8 AM",
            "6": "9 AM",
            "7": "10 AM",
            "8": "11 AM",
            "9": "12 PM",
            "10": "1 PM",
            "11": "2 PM",
            "12": "3 PM",
            "13": "4 PM"
        }
    },
    "mctq_sd_wake_up_time_hrs2": {
        "Description": "I wake up at: | 1=5 PM; 2=6 PM; 3=7 PM; 4=8 PM; 5=9 PM; 6=10 PM; 7=11 PM; 8=12 AM; 9=1 AM; 10=2 AM; 11=3 AM",
        "DataType": "Integer",
        "ValueRange": "1::11",
        "Levels": {
            "1": "5 PM",
            "2": "6 PM",
            "3": "7 PM",
            "4": "8 PM",
            "5": "9 PM",
            "6": "10 PM",
            "7": "11 PM",
            "8": "12 AM",
            "9": "1 AM",
            "10": "2 AM",
            "11": "3 AM"
        }
    },
    "mctq_sd_wake_up_miin": {
        "Description": "I wake up at: | 1=0 minutes; 2=5 minutes; 3=10 minutes; 4=15 minutes; 5=20 minutes; 6=25 minutes; 7=30 minutes; 8=35 minutes; 9=40 minutes; 10=45 minutes; 11=50 minutes; 12=55 minutes",
        "DataType": "Integer",
        "ValueRange": "1::12",
        "Levels": {
            "1": "0 minutes",
            "2": "5 minutes",
            "3": "10 minutes",
            "4": "15 minutes",
            "5": "20 minutes",
            "6": "25 minutes",
            "7": "30 minutes",
            "8": "35 minutes",
            "9": "40 minutes",
            "10": "45 minutes",
            "11": "50 minutes",
            "12": "55 minutes"
        }
    },
    "mctq_sd_wake_up_time_calc": {
        "Description": "Sleep end, workday | ([mctq_sd_wake_up_miin] - 1)/12 + if([mctq_sd_wake_up_time_hrs1] > 0, (3 + [mctq_sd_wake_up_time_hrs1]), (16 + [mctq_sd_wake_up_time_hrs2]))",
        "DataType": "Float"
    },
    "mctq_sd_min_to_get_up": {
        "Description": "After _________ minutes I get up. | 0=0; 1=1; 2=2; 3=3; 4=4; 5=5; 6=6; 7=7; 8=8; 9=9; 10=10; 11=15; 12=20; 13=25; 14=30; 15=40; 16=50; 17=1 hour; 18=1 hour 15 minute; 19=1 hour 30 minute; 20=1 hour 45 minute; 21=2 hours; 22=3 hours; 23=4 hours",
        "DataType": "Integer",
        "ValueRange": "0::23",
        "Levels": {
            "0": "0",
            "1": "1",
            "2": "2",
            "3": "3",
            "4": "4",
            "5": "5",
            "6": "6",
            "7": "7",
            "8": "8",
            "9": "9",
            "10": "10",
            "11": "15",
            "12": "20",
            "13": "25",
            "14": "30",
            "15": "40",
            "16": "50",
            "17": "1 hour",
            "18": "1 hour 15 minute",
            "19": "1 hour 30 minute",
            "20": "1 hour 45 minute",
            "21": "2 hours",
            "22": "3 hours",
            "23": "4 hours"
        }
    },
    "mctq_sd_min_to_get_up_calc": {
        "Description": "Sleep inertia, workday | if ([mctq_sd_min_to_get_up]< 11,[mctq_sd_min_to_get_up], if([mctq_sd_min_to_get_up] < 15 =15 + 5*([mctq_sd_min_to_get_up] - 11)= if([mctq_sd_min_to_get_up] < 18 =40 + 10*([mctq_sd_min_to_get_up] - 15), if([mctq_sd_min_to_get_up] < 22 , 75 + 15*([mctq_sd_min_to_get_up] - 18), 180 + 60*([mctq_sd_min_to_get_up] - 22)))))",
        "DataType": "Float"
    },
    "mctq_sd_alarm_clock": {
        "Description": "On school days, I wake up by using an alarm clock or my parents wake me up",
        "DataType": "Integer"
    },
    "mctq_sd_before_alarm": {
        "Description": "I regularly wake up BEFORE the alarm rings:",
        "DataType": "Integer"
    },
    "mctq_fd_btime": {
        "Description": "I go to bed at: | 1=Morning (4:00 AM to 11:59 AM); 2=Afternoon (12:00 PM Noon to 4:59 PM); 3=Evening (5:00 PM to 8:59 PM); 4=Nighttime (9:00 PM to 3:59 AM)",
        "DataType": "Integer",
        "ValueRange": "1::4",
        "Levels": {
            "1": "Morning (4:00 AM to 11:59 AM)",
            "2": "Afternoon (12:00 PM Noon to 4:59 PM)",
            "3": "Evening (5:00 PM to 8:59 PM)",
            "4": "Nighttime (9:00 PM to 3:59 AM)"
        }
    },
    "mctq_fd_btime_hrs1": {
        "Description": "I go to bed at: | 1=4 AM; 2=5 AM; 3=6 AM; 4=7 AM; 5=8 AM; 6=9 AM; 7=10 AM; 8=11 AM; 9=12 PM; 10=1 PM; 11=2 PM; 12=3 PM; 13=4 PM",
        "DataType": "Integer",
        "ValueRange": "1::13",
        "Levels": {
            "1": "4 AM",
            "2": "5 AM",
            "3": "6 AM",
            "4": "7 AM",
            "5": "8 AM",
            "6": "9 AM",
            "7": "10 AM",
            "8": "11 AM",
            "9": "12 PM",
            "10": "1 PM",
            "11": "2 PM",
            "12": "3 PM",
            "13": "4 PM"
        }
    },
    "mctq_fd_btime_hrs2": {
        "Description": "I go to bed at: | 1=5 PM; 2=6 PM; 3=7 PM; 4=8 PM; 5=9 PM; 6=10 PM; 7=11 PM; 8=12 AM; 9=1 AM; 10=2 AM; 11=3 AM",
        "DataType": "Integer",
        "ValueRange": "1::11",
        "Levels": {
            "1": "5 PM",
            "2": "6 PM",
            "3": "7 PM",
            "4": "8 PM",
            "5": "9 PM",
            "6": "10 PM",
            "7": "11 PM",
            "8": "12 AM",
            "9": "1 AM",
            "10": "2 AM",
            "11": "3 AM"
        }
    },
    "mctq_fd_btime_min": {
        "Description": "I go to bed at: | 1=0 minutes; 2=5 minutes; 3=10 minutes; 4=15 minutes; 5=20 minutes; 6=25 minutes; 7=30 minutes; 8=35 minutes; 9=40 minutes; 10=45 minutes; 11=50 minutes; 12=55 minutes",
        "DataType": "Integer",
        "ValueRange": "1::12",
        "Levels": {
            "1": "0 minutes",
            "2": "5 minutes",
            "3": "10 minutes",
            "4": "15 minutes",
            "5": "20 minutes",
            "6": "25 minutes",
            "7": "30 minutes",
            "8": "35 minutes",
            "9": "40 minutes",
            "10": "45 minutes",
            "11": "50 minutes",
            "12": "55 minutes"
        }
    },
    "mctq_fd_btime_calc": {
        "Description": "Local time of going to bed, freeday | ([mctq_fd_btime_min] - 1)/12 + if([mctq_fd_btime_hrs1] > 0, (3 + [mctq_fd_btime_hrs1]), (16 + [mctq_fd_btime_hrs2]))",
        "DataType": "Float"
    },
    "mctq_fd_time_asleep": {
        "Description": "I actually start trying to fall asleep at: | 1=Morning (4:00 AM to 11:59 AM); 2=Afternoon (12:00 PM Noon to 4:59 PM); 3=Evening (5:00 PM to 8:59 PM); 4=Nighttime (9:00 PM to 3:59 AM)",
        "DataType": "Integer",
        "ValueRange": "1::4",
        "Levels": {
            "1": "Morning (4:00 AM to 11:59 AM)",
            "2": "Afternoon (12:00 PM Noon to 4:59 PM)",
            "3": "Evening (5:00 PM to 8:59 PM)",
            "4": "Nighttime (9:00 PM to 3:59 AM)"
        }
    },
    "mctq_fd_asleep_hrs1": {
        "Description": "I actually start trying to fall asleep at: | 1=4 AM; 2=5 AM; 3=6 AM; 4=7 AM; 5=8 AM; 6=9 AM; 7=10 AM; 8=11 AM; 9=12 PM; 10=1 PM; 11=2 PM; 12=3 PM; 13=4 PM",
        "DataType": "Integer",
        "ValueRange": "1::13",
        "Levels": {
            "1": "4 AM",
            "2": "5 AM",
            "3": "6 AM",
            "4": "7 AM",
            "5": "8 AM",
            "6": "9 AM",
            "7": "10 AM",
            "8": "11 AM",
            "9": "12 PM",
            "10": "1 PM",
            "11": "2 PM",
            "12": "3 PM",
            "13": "4 PM"
        }
    },
    "mctq_fd_asleep_hrs2": {
        "Description": "I actually start trying to fall asleep at: | 1=5 PM; 2=6 PM; 3=7 PM; 4=8 PM; 5=9 PM; 6=10 PM; 7=11 PM; 8=12 AM; 9=1 AM; 10=2 AM; 11=3 AM",
        "DataType": "Integer",
        "ValueRange": "1::11",
        "Levels": {
            "1": "5 PM",
            "2": "6 PM",
            "3": "7 PM",
            "4": "8 PM",
            "5": "9 PM",
            "6": "10 PM",
            "7": "11 PM",
            "8": "12 AM",
            "9": "1 AM",
            "10": "2 AM",
            "11": "3 AM"
        }
    },
    "mctq_fd_asleep_min": {
        "Description": "I actually start trying to fall asleep at: | 1=0 minutes; 2=5 minutes; 3=10 minutes; 4=15 minutes; 5=20 minutes; 6=25 minutes; 7=30 minutes; 8=35 minutes; 9=40 minutes; 10=45 minutes; 11=50 minutes; 12=55 minutes",
        "DataType": "Integer",
        "ValueRange": "1::12",
        "Levels": {
            "1": "0 minutes",
            "2": "5 minutes",
            "3": "10 minutes",
            "4": "15 minutes",
            "5": "20 minutes",
            "6": "25 minutes",
            "7": "30 minutes",
            "8": "35 minutes",
            "9": "40 minutes",
            "10": "45 minutes",
            "11": "50 minutes",
            "12": "55 minutes"
        }
    },
    "mctq_fd_min_to_sleep": {
        "Description": "I need ________ minutes to fall asleep. | 0=0; 1=1; 2=2; 3=3; 4=4; 5=5; 6=6; 7=7; 8=8; 9=9; 10=10; 11=15; 12=20; 13=25; 14=30; 15=40; 16=50; 17=1 hour; 18=1 hour 15 minute; 19=1 hour 30 minute; 20=1 hour 45 minute; 21=2 hours; 22=3 hours; 23=4 hours",
        "DataType": "Integer",
        "ValueRange": "0::23",
        "Levels": {
            "0": "0",
            "1": "1",
            "2": "2",
            "3": "3",
            "4": "4",
            "5": "5",
            "6": "6",
            "7": "7",
            "8": "8",
            "9": "9",
            "10": "10",
            "11": "15",
            "12": "20",
            "13": "25",
            "14": "30",
            "15": "40",
            "16": "50",
            "17": "1 hour",
            "18": "1 hour 15 minute",
            "19": "1 hour 30 minute",
            "20": "1 hour 45 minute",
            "21": "2 hours",
            "22": "3 hours",
            "23": "4 hours"
        }
    },
    "mctq_fd_min_to_sleep_calc": {
        "Description": "Sleep latency in minutes, freeday | if ([mctq_fd_min_to_sleep]< 11=[mctq_fd_min_to_sleep]=if([mctq_fd_min_to_sleep] < 15=15 + 5*([mctq_fd_min_to_sleep] - 11), if([mctq_fd_min_to_sleep] < 18=40 + 10*([mctq_fd_min_to_sleep] - 15)=if([mctq_fd_min_to_sleep] < 22=75 + 15*([mctq_fd_min_to_sleep] - 18)=180 + 60*([mctq_fd_min_to_sleep] - 22)))))",
        "DataType": "Float"
    },
    "mctq_fd_num_wake_up": {
        "Description": "After falling asleep, I wake up ____ times during the night. <i>(Min=0, Max = 10)</i>",
        "DataType": "Integer"
    },
    "mctq_fd_awakening_min": {
        "Description": "Altogether, these awakenings last ______minutes. | 0=0; 1=1; 2=2; 3=3; 4=4; 5=5; 6=6; 7=7; 8=8; 9=9; 10=10; 11=15; 12=20; 13=25; 14=30; 15=40; 16=50; 17=1 hour; 18=1 hour 15 minute; 19=1 hour 30 minute; 20=1 hour 45 minute; 21=2 hours; 22=3 hours; 23=4 hours",
        "DataType": "Integer",
        "ValueRange": "0::23",
        "Levels": {
            "0": "0",
            "1": "1",
            "2": "2",
            "3": "3",
            "4": "4",
            "5": "5",
            "6": "6",
            "7": "7",
            "8": "8",
            "9": "9",
            "10": "10",
            "11": "15",
            "12": "20",
            "13": "25",
            "14": "30",
            "15": "40",
            "16": "50",
            "17": "1 hour",
            "18": "1 hour 15 minute",
            "19": "1 hour 30 minute",
            "20": "1 hour 45 minute",
            "21": "2 hours",
            "22": "3 hours",
            "23": "4 hours"
        }
    },
    "mctq_fd_wake_up_time": {
        "Description": "I wake up at: | 1=Morning (4:00 AM to 11:59 AM); 2=Afternoon (12:00 PM Noon to 4:59 PM); 3=Evening (5:00 PM to 8:59 PM); 4=Nighttime (9:00 PM to 3:59 AM)",
        "DataType": "Integer",
        "ValueRange": "1::4",
        "Levels": {
            "1": "Morning (4:00 AM to 11:59 AM)",
            "2": "Afternoon (12:00 PM Noon to 4:59 PM)",
            "3": "Evening (5:00 PM to 8:59 PM)",
            "4": "Nighttime (9:00 PM to 3:59 AM)"
        }
    },
    "mctq_fd_wake_up_hrs1": {
        "Description": "I wake up at : | 1=4 AM; 2=5 AM; 3=6 AM; 4=7 AM; 5=8 AM; 6=9 AM; 7=10 AM; 8=11 AM; 9=12 PM; 10=1 PM; 11=2 PM; 12=3 PM; 13=4 PM",
        "DataType": "Integer",
        "ValueRange": "1::13",
        "Levels": {
            "1": "4 AM",
            "2": "5 AM",
            "3": "6 AM",
            "4": "7 AM",
            "5": "8 AM",
            "6": "9 AM",
            "7": "10 AM",
            "8": "11 AM",
            "9": "12 PM",
            "10": "1 PM",
            "11": "2 PM",
            "12": "3 PM",
            "13": "4 PM"
        }
    },
    "mctq_fd_wake_up_hrs2": {
        "Description": "I wake up at : | 1=5 PM; 2=6 PM; 3=7 PM; 4=8 PM; 5=9 PM; 6=10 PM; 7=11 PM; 8=12 AM; 9=1 AM; 10=2 AM; 11=3 AM",
        "DataType": "Integer",
        "ValueRange": "1::11",
        "Levels": {
            "1": "5 PM",
            "2": "6 PM",
            "3": "7 PM",
            "4": "8 PM",
            "5": "9 PM",
            "6": "10 PM",
            "7": "11 PM",
            "8": "12 AM",
            "9": "1 AM",
            "10": "2 AM",
            "11": "3 AM"
        }
    },
    "mctq_fd_wake_up_min": {
        "Description": "I wake up at : | 1=0 minutes; 2=5 minutes; 3=10 minutes; 4=15 minutes; 5=20 minutes; 6=25 minutes; 7=30 minutes; 8=35 minutes; 9=40 minutes; 10=45 minutes; 11=50 minutes; 12=55 minutes",
        "DataType": "Integer",
        "ValueRange": "1::12",
        "Levels": {
            "1": "0 minutes",
            "2": "5 minutes",
            "3": "10 minutes",
            "4": "15 minutes",
            "5": "20 minutes",
            "6": "25 minutes",
            "7": "30 minutes",
            "8": "35 minutes",
            "9": "40 minutes",
            "10": "45 minutes",
            "11": "50 minutes",
            "12": "55 minutes"
        }
    },
    "mctq_fd_wake_up_time_calc": {
        "Description": "Sleep end, freeday | ([mctq_fd_wake_up_min] - 1)/12 + if([mctq_fd_wake_up_hrs1] > 0, (3 + [mctq_fd_wake_up_hrs1]), (16 + [mctq_fd_wake_up_hrs2]))",
        "DataType": "Float"
    },
    "mctq_fd_min_to_get_up": {
        "Description": "After _________ minutes I get up. | 0=0; 1=1; 2=2; 3=3; 4=4; 5=5; 6=6; 7=7; 8=8; 9=9; 10=10; 11=15; 12=20; 13=25; 14=30; 15=40; 16=50; 17=1 hour; 18=1 hour 15 minute; 19=1 hour 30 minute; 20=1 hour 45 minute; 21=2 hours; 22=3 hours; 23=4 hours",
        "DataType": "Integer",
        "ValueRange": "0::23",
        "Levels": {
            "0": "0",
            "1": "1",
            "2": "2",
            "3": "3",
            "4": "4",
            "5": "5",
            "6": "6",
            "7": "7",
            "8": "8",
            "9": "9",
            "10": "10",
            "11": "15",
            "12": "20",
            "13": "25",
            "14": "30",
            "15": "40",
            "16": "50",
            "17": "1 hour",
            "18": "1 hour 15 minute",
            "19": "1 hour 30 minute",
            "20": "1 hour 45 minute",
            "21": "2 hours",
            "22": "3 hours",
            "23": "4 hours"
        }
    },
    "mctq_fd_min_to_get_up_calc": {
        "Description": "Sleep inertia in minutes, freeday | if([mctq_fd_min_to_get_up] < 11=[mctq_fd_min_to_get_up], if([mctq_fd_min_to_get_up] < 15=15 + 5*([mctq_fd_min_to_get_up] - 11)=if ([mctq_fd_min_to_get_up] < 18=40 + 10*([mctq_fd_min_to_get_up] - 15), if ([mctq_fd_min_to_get_up] < 22 =75 + 15*([mctq_fd_min_to_get_up] - 18)=180 + 60*([mctq_fd_min_to_get_up] - 22) ))))",
        "DataType": "Float"
    },
    "mctq_fd_alarm_parent": {
        "Description": "On free days, I wake up by using an alarm clock or my parents wake me up.",
        "DataType": "Integer"
    },
    "mctq_fd_reason_btime": {
        "Description": "On free days, are you able to freely choose your bed time and wake-up time?",
        "DataType": "Integer"
    },
    "mctq_fd_other_reason": {
        "Description": "If Others:",
        "DataType": "Integer"
    },
    "mctq_schedule_time": {
        "Description": "My usual school schedule starts at: | 1=Morning (4:00 AM to 11:59 AM); 2=Afternoon (12:00 PM Noon to 4:59 PM); 3=Evening (5:00 PM to 8:59 PM); 4=Nighttime (9:00 PM to 3:59 AM); 0=I don't regularly travel to school / I am home schooled",
        "DataType": "Integer",
        "ValueRange": "0::4",
        "Levels": {
            "1": "Morning (4:00 AM to 11:59 AM)",
            "2": "Afternoon (12:00 PM Noon to 4:59 PM)",
            "3": "Evening (5:00 PM to 8:59 PM)",
            "4": "Nighttime (9:00 PM to 3:59 AM)",
            "0": "I don't regularly travel to school / I am home schooled"
        }
    },
    "mctq_schedule_time_hrs1": {
        "Description": "My usual school schedule starts at: | 1=4 AM; 2=5 AM; 3=6 AM; 4=7 AM; 5=8 AM; 6=9 AM; 7=10 AM; 8=11 AM; 9=12 PM; 10=1 PM; 11=2 PM; 12=3 PM; 13=4 PM",
        "DataType": "Integer",
        "ValueRange": "1::13",
        "Levels": {
            "1": "4 AM",
            "2": "5 AM",
            "3": "6 AM",
            "4": "7 AM",
            "5": "8 AM",
            "6": "9 AM",
            "7": "10 AM",
            "8": "11 AM",
            "9": "12 PM",
            "10": "1 PM",
            "11": "2 PM",
            "12": "3 PM",
            "13": "4 PM"
        }
    },
    "mctq_schedule_time_hrs2": {
        "Description": "My usual school schedule starts at: | 1=5 PM; 2=6 PM; 3=7 PM; 4=8 PM; 5=9 PM; 6=10 PM; 7=11 PM; 8=12 AM; 9=1 AM; 10=2 AM; 11=3 AM",
        "DataType": "Integer",
        "ValueRange": "1::11",
        "Levels": {
            "1": "5 PM",
            "2": "6 PM",
            "3": "7 PM",
            "4": "8 PM",
            "5": "9 PM",
            "6": "10 PM",
            "7": "11 PM",
            "8": "12 AM",
            "9": "1 AM",
            "10": "2 AM",
            "11": "3 AM"
        }
    },
    "mctq_schedule_time_min": {
        "Description": "My usual school schedule starts at: | 1=0 minutes; 2=5 minutes; 3=10 minutes; 4=15 minutes; 5=20 minutes; 6=25 minutes; 7=30 minutes; 8=35 minutes; 9=40 minutes; 10=45 minutes; 11=50 minutes; 12=55 minutes",
        "DataType": "Integer",
        "ValueRange": "1::12",
        "Levels": {
            "1": "0 minutes",
            "2": "5 minutes",
            "3": "10 minutes",
            "4": "15 minutes",
            "5": "20 minutes",
            "6": "25 minutes",
            "7": "30 minutes",
            "8": "35 minutes",
            "9": "40 minutes",
            "10": "45 minutes",
            "11": "50 minutes",
            "12": "55 minutes"
        }
    },
    "mctq_schedule_time_calc": {
        "Description": "My usual school schedule starts at | ([mctq_schedule_time_min] - 1)/12 + if ([mctq_schedule_time_hrs1] > 0, (3 + [mctq_schedule_time_hrs1]),  if ([mctq_schedule_time_hrs2] < 8, (16 + [mctq_schedule_time_hrs2]), ([mctq_schedule_time_hrs2] - 8)))",
        "DataType": "Float"
    },
    "mctq_time_to_school": {
        "Description": "I leave the house to go to school in the morning at: | 1=Morning (4:00 AM to 11:59 AM); 2=Afternoon (12:00 PM Noon to 4:59 PM); 3=Evening (5:00 PM to 8:59 PM); 4=Nighttime (9:00 PM to 3:59 AM); 0=I don't regularly travel to school / I am home schooled",
        "DataType": "Integer",
        "ValueRange": "0::4",
        "Levels": {
            "1": "Morning (4:00 AM to 11:59 AM)",
            "2": "Afternoon (12:00 PM Noon to 4:59 PM)",
            "3": "Evening (5:00 PM to 8:59 PM)",
            "4": "Nighttime (9:00 PM to 3:59 AM)",
            "0": "I don't regularly travel to school / I am home schooled"
        }
    },
    "mctq_time_to_school_hrs1": {
        "Description": "I leave the house to go to school in the morning at: | 1=4 AM; 2=5 AM; 3=6 AM; 4=7 AM; 5=8 AM; 6=9 AM; 7=10 AM; 8=11 AM; 9=12 PM; 10=1 PM; 11=2 PM; 12=3 PM; 13=4 PM",
        "DataType": "Integer",
        "ValueRange": "1::13",
        "Levels": {
            "1": "4 AM",
            "2": "5 AM",
            "3": "6 AM",
            "4": "7 AM",
            "5": "8 AM",
            "6": "9 AM",
            "7": "10 AM",
            "8": "11 AM",
            "9": "12 PM",
            "10": "1 PM",
            "11": "2 PM",
            "12": "3 PM",
            "13": "4 PM"
        }
    },
    "mctq_time_to_school_hrs2": {
        "Description": "I leave the house to go to school in the morning at: | 1=5 PM; 2=6 PM; 3=7 PM; 4=8 PM; 5=9 PM; 6=10 PM; 7=11 PM; 8=12 AM; 9=1 AM; 10=2 AM; 11=3 AM",
        "DataType": "Integer",
        "ValueRange": "1::11",
        "Levels": {
            "1": "5 PM",
            "2": "6 PM",
            "3": "7 PM",
            "4": "8 PM",
            "5": "9 PM",
            "6": "10 PM",
            "7": "11 PM",
            "8": "12 AM",
            "9": "1 AM",
            "10": "2 AM",
            "11": "3 AM"
        }
    },
    "mctq_time_to_school_min": {
        "Description": "I leave the house to go to school in the morning at: | 1=0 minutes; 2=5 minutes; 3=10 minutes; 4=15 minutes; 5=20 minutes; 6=25 minutes; 7=30 minutes; 8=35 minutes; 9=40 minutes; 10=45 minutes; 11=50 minutes; 12=55 minutes",
        "DataType": "Integer",
        "ValueRange": "1::12",
        "Levels": {
            "1": "0 minutes",
            "2": "5 minutes",
            "3": "10 minutes",
            "4": "15 minutes",
            "5": "20 minutes",
            "6": "25 minutes",
            "7": "30 minutes",
            "8": "35 minutes",
            "9": "40 minutes",
            "10": "45 minutes",
            "11": "50 minutes",
            "12": "55 minutes"
        }
    },
    "mctq_time_to_school_calc": {
        "Description": "I leave the house to go to school in the morning at | ([mctq_time_to_school_min] - 1)/12 + if([mctq_time_to_school_hrs1] > 0, (3 + [mctq_time_to_school_hrs1]), if ([mctq_time_to_school_hrs2] < 8 , (16 + [mctq_time_to_school_hrs2]), ([mctq_time_to_school_hrs2] - 8)))",
        "DataType": "Float"
    },
    "mctq_sow_calc": {
        "Description": "Sleep onset, workday | [mctq_sd_fall_asleep_calc] + [mctq_sd_min_to_sleep_calc]/60 + if(([mctq_sd_fall_asleep_calc] + [mctq_sd_min_to_sleep_calc]/60) >= 40, -24, 0)",
        "DataType": "Float"
    },
    "mctq_sof_calc": {
        "Description": "Sleep onset, freeday | [mctq_fd_time_asleep_calc] + [mctq_fd_min_to_sleep_calc]/60 + if(([mctq_fd_time_asleep_calc] + [mctq_fd_min_to_sleep_calc]/60) >= 40, -24, 0)",
        "DataType": "Float"
    },
    "mctq_guw_calc": {
        "Description": "Local time of getting out of bed, workday | [mctq_sd_wake_up_time_calc] + [mctq_sd_min_to_get_up_calc]/60 + if(([mctq_sd_wake_up_time_calc] + [mctq_sd_min_to_get_up_calc]/60) >= 40, -24, 0)",
        "DataType": "Float"
    },
    "mctq_guf_calc": {
        "Description": "Local time of getting out of bed, freeday | [mctq_fd_wake_up_time_calc] + [mctq_fd_min_to_get_up_calc]/60 + if(([mctq_fd_wake_up_time_calc] + [mctq_fd_min_to_get_up_calc]/60) >= 40, -24, 0)",
        "DataType": "Float"
    },
    "mctq_sdw_calc": {
        "Description": "Sleep duration, workday | ([mctq_sd_wake_up_time_calc] - [mctq_sow_calc]) plus ( if ([mctq_sow_calc] >= [mctq_sd_wake_up_time_calc], 24, 0))",
        "DataType": "Float"
    },
    "mctq_sdf_calc": {
        "Description": "Sleep duration, freeday | ([mctq_fd_wake_up_time_calc] - [mctq_sof_calc]) plus (if ([mctq_sof_calc] >= [mctq_fd_wake_up_time_calc], 24, 0))",
        "DataType": "Float"
    },
    "mctq_tbtw_calc": {
        "Description": "Total time in bed, workday | ([mctq_guw_calc]- [mctq_sd_btime_calc]) plus (if ([mctq_sd_btime_calc] >= [mctq_guw_calc], 24, 0))",
        "DataType": "Float"
    },
    "mctq_tbtf_calc": {
        "Description": "Total time in bed, freeday | ([mctq_guf_calc] - [mctq_fd_btime_calc]) plus (if ([mctq_fd_btime_calc] >= [mctq_guf_calc], 24 , 0))",
        "DataType": "Float"
    },
    "mctq_msw_calc": {
        "Description": "Mid-Sleep, workday | round([mctq_sow_calc] plus ([mctq_sdw_calc])/2 plus if (([mctq_sow_calc]plus ([mctq_sdw_calc])/2 )>= 24, -24, 0), 4)",
        "DataType": "Float"
    },
    "mctq_msf_calc": {
        "Description": "Mid-Sleep, freeday | round([mctq_sof_calc] plus ([mctq_sdf_calc])/2 plus if (([mctq_sof_calc]plus ([mctq_sdf_calc])/2 )>= 24, -24, 0), 4)",
        "DataType": "Float"
    },
    "mctq_fd_calc": {
        "Description": "Number of work-free days per week | [mctq_sof_calc] + [mctq_sdf_calc]/2 + if(([mctq_sof_calc] + [mctq_sdf_calc]/2) >=40, -24, 0)",
        "DataType": "Float"
    },
    "mctq_sdweek_calc": {
        "Description": "Average weekly sleep duration | round(([mctq_days_per_week_calc]multiply by[mctq_sdw_calc] plus [mctq_fd_calc]*[mctq_sdf_calc])/ 7, 4)",
        "DataType": "Float"
    },
    "mctq_msfsc_calc": {
        "Description": "Chronotype | round(if ([mctq_fd_alarm_parent] = 0, if ([mctq_sdf_calc] <= [mctq_sdw_calc], [mctq_msf_calc], [mctq_sof_calc] plus [mctq_sdweek_calc]/2 plus if([mctq_sof_calc] plus [mctq_sdweek_calc]/2 >= 40, -24, 0)), ''), 4)",
        "DataType": "Float"
    },
    "mctq_slossweek_calc": {
        "Description": "Weekly sleep loss | round(abs([mctq_sdf_calc]-[mctq_sdw_calc])multiply by[mctq_fd_calc]multiply by([mctq_days_per_week_calc]/7), 4)",
        "DataType": "Float"
    },
    "mctq_sjlrel_calc": {
        "Description": "Relative social jetlag | round(if(([mctq_msf_calc]-[mctq_msw_calc])>12 , ([mctq_msf_calc]-[mctq_msw_calc])-24 , if (([mctq_msf_calc]-[mctq_msw_calc])<-12, ([mctq_msf_calc]-[mctq_msw_calc])plus24, ([mctq_msf_calc]-[mctq_msw_calc]))), 4)",
        "DataType": "Float"
    },
    "mctq_sjl_calc": {
        "Description": "Absolute social jetlag | round(if(abs([mctq_msf_calc]-[mctq_msw_calc]) >12 , (24-abs([mctq_msf_calc]-[mctq_msw_calc])) , abs([mctq_msf_calc]-[mctq_msw_calc])), 4)",
        "DataType": "Float"
    },
    "mctq_fd_reason2___1": {
        "Description": "If no, what are the reasons?  Family member/pet(s) | 1= Yes; 0 =No",
        "DataType": "Integer",
        "ValueRange": "1;0",
        "Levels": {
            "1": "Yes",
            "0": "No"
        }
    },
    "mctq_fd_reason2___2": {
        "Description": "If no, what are the reasons?  Work | 1= Yes; 0 =No",
        "DataType": "Integer",
        "ValueRange": "1;0",
        "Levels": {
            "1": "Yes",
            "0": "No"
        }
    },
    "mctq_fd_reason2___3": {
        "Description": "If no, what are the reasons?  Sports | 1= Yes; 0 =No",
        "DataType": "Integer",
        "ValueRange": "1;0",
        "Levels": {
            "1": "Yes",
            "0": "No"
        }
    },
    "mctq_fd_reason2___4": {
        "Description": "If no, what are the reasons?  Hobbies | 1= Yes; 0 =No",
        "DataType": "Integer",
        "ValueRange": "1;0",
        "Levels": {
            "1": "Yes",
            "0": "No"
        }
    },
    "mctq_fd_reason2___5": {
        "Description": "If no, what are the reasons?  Others | 1= Yes; 0 =No",
        "DataType": "Integer",
        "ValueRange": "1;0",
        "Levels": {
            "1": "Yes",
            "0": "No"
        }
    },
    "mctq_admin": {
        "Description": "Please indicate how instrument was administered: | 1=RA-Administered ; 2=Youth Self-Administered ; 3=Combination [event_name_number] > '21'",
        "DataType": "Integer",
        "ValueRange": "1::3",
        "Levels": {
            "1": "RA-Administered",
            "2": "Youth Self-Administered",
            "3": "Combination [event_name_number] > '21'"
        }
    }
}